<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.nebulas.explorer.mapper.BlockSyncRecordMapper">
    <resultMap id="BaseResultMap" type="io.nebulas.explorer.domain.BlockSyncRecord">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="block_height" property="blockHeight" jdbcType="BIGINT"/>
        <result column="tx_cnt" property="txCnt" jdbcType="BIGINT"/>
        <result column="confirm" property="confirm" jdbcType="BIGINT"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    `id`, `block_height`, `tx_cnt`, `confirm`, `created_at`, `updated_at`
    </sql>

    <insert id="add" parameterType="io.nebulas.explorer.domain.BlockSyncRecord">
    insert ignore into block_sync_record (block_height, tx_cnt,  confirm)
    values (#{blockHeight,jdbcType=BIGINT}, #{txCnt,jdbcType=BIGINT}, #{confirm,jdbcType=BIGINT})
    </insert>

    <update id="updateById" parameterType="io.nebulas.explorer.domain.BlockSyncRecord">
    update block_sync_record
    set block_height = #{blockHeight,jdbcType=BIGINT},
      tx_cnt = #{txCnt,jdbcType=BIGINT},
      confirm = #{confirm,jdbcType=BIGINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="updateByBlockHeight" parameterType="map">
      update block_sync_record
      set tx_cnt = #{txCnt,jdbcType=BIGINT},
      confirm = #{blockHeight,jdbcType=BIGINT}
    where block_height = #{blockHeight,jdbcType=BIGINT}
    </update>

    <select id="getMaxConfirmedBlock" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from block_sync_record
        where confirm > 0
        order by block_height DESC
        limit 1
    </select>

    <select id="getMaxBlock" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from block_sync_record
        order by block_height DESC
        limit 1
    </select>

    <select id="findUnConfirmed" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from block_sync_record
        <![CDATA[
        where confirm = 0 and block_height < #{blockHeight,jdbcType=BIGINT}
        ]]>
    </select>
</mapper>